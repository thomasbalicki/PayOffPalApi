// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayOffPalApi.Data;

#nullable disable

namespace PayOffPalApi.Migrations
{
    [DbContext(typeof(PayOffPalDbContext))]
    partial class PayOffPalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PayOffPalApi.Data.Debt", b =>
                {
                    b.Property<int>("DebtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DebtId"));

                    b.Property<decimal>("AmountOwed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DebtCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DebtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DebtId");

                    b.HasIndex("DebtCategoryId");

                    b.ToTable("Debts");

                    b.HasData(
                        new
                        {
                            DebtId = 1,
                            AmountOwed = 40000.00m,
                            DateAdded = new DateTime(2023, 11, 28, 20, 28, 28, 570, DateTimeKind.Local).AddTicks(3042),
                            DebtCategoryId = 1,
                            DebtName = "Discover Student Loan",
                            InterestRate = 10.0,
                            MonthlyPayment = 300.00m
                        },
                        new
                        {
                            DebtId = 2,
                            AmountOwed = 2500.00m,
                            DateAdded = new DateTime(2023, 11, 28, 20, 28, 28, 570, DateTimeKind.Local).AddTicks(3112),
                            DebtCategoryId = 2,
                            DebtName = "Apple Credit Card",
                            InterestRate = 20.0,
                            MonthlyPayment = 100.00m
                        },
                        new
                        {
                            DebtId = 3,
                            AmountOwed = 6000.00m,
                            DateAdded = new DateTime(2023, 11, 28, 20, 28, 28, 570, DateTimeKind.Local).AddTicks(3115),
                            DebtCategoryId = 3,
                            DebtName = "Landmark Credit Union Loan",
                            InterestRate = 20.0,
                            MonthlyPayment = 270.00m
                        });
                });

            modelBuilder.Entity("PayOffPalApi.Data.DebtCategory", b =>
                {
                    b.Property<int>("DebtCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DebtCategoryId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DebtCategoryId");

                    b.ToTable("DebtCategories");

                    b.HasData(
                        new
                        {
                            DebtCategoryId = 1,
                            Name = "Student Loans"
                        },
                        new
                        {
                            DebtCategoryId = 2,
                            Name = "Credit Card"
                        },
                        new
                        {
                            DebtCategoryId = 3,
                            Name = "Vehicle Loan"
                        });
                });

            modelBuilder.Entity("PayOffPalApi.Data.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DebtId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("DebtId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            AmountPaid = 100.00m,
                            DebtId = 2,
                            PaymentDate = new DateTime(2023, 11, 28, 20, 28, 28, 570, DateTimeKind.Local).AddTicks(3145)
                        },
                        new
                        {
                            PaymentId = 2,
                            AmountPaid = 300.00m,
                            DebtId = 1,
                            PaymentDate = new DateTime(2023, 11, 28, 20, 28, 28, 570, DateTimeKind.Local).AddTicks(3150)
                        },
                        new
                        {
                            PaymentId = 3,
                            AmountPaid = 270.00m,
                            DebtId = 3,
                            PaymentDate = new DateTime(2023, 11, 28, 20, 28, 28, 570, DateTimeKind.Local).AddTicks(3154)
                        });
                });

            modelBuilder.Entity("PayOffPalApi.Data.Debt", b =>
                {
                    b.HasOne("PayOffPalApi.Data.DebtCategory", "DebtCategory")
                        .WithMany("Debts")
                        .HasForeignKey("DebtCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtCategory");
                });

            modelBuilder.Entity("PayOffPalApi.Data.Payment", b =>
                {
                    b.HasOne("PayOffPalApi.Data.Debt", "Debt")
                        .WithMany("Payments")
                        .HasForeignKey("DebtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debt");
                });

            modelBuilder.Entity("PayOffPalApi.Data.Debt", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PayOffPalApi.Data.DebtCategory", b =>
                {
                    b.Navigation("Debts");
                });
#pragma warning restore 612, 618
        }
    }
}
