// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayOffPalApi.Data;

#nullable disable

namespace PayOffPalApi.Migrations
{
    [DbContext(typeof(PayOffPalDbContext))]
    [Migration("20231129020013_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PayOffPalApi.Data.Debt", b =>
                {
                    b.Property<int>("DebtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DebtId"));

                    b.Property<decimal>("AmountOwed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DebtCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DebtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DebtId");

                    b.HasIndex("DebtCategoryId");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("PayOffPalApi.Data.DebtCategory", b =>
                {
                    b.Property<int>("DebtCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DebtCategoryId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DebtCategoryId");

                    b.ToTable("DebtCategories");
                });

            modelBuilder.Entity("PayOffPalApi.Data.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DebtId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("DebtId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PayOffPalApi.Data.Debt", b =>
                {
                    b.HasOne("PayOffPalApi.Data.DebtCategory", "DebtCategory")
                        .WithMany("Debts")
                        .HasForeignKey("DebtCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtCategory");
                });

            modelBuilder.Entity("PayOffPalApi.Data.Payment", b =>
                {
                    b.HasOne("PayOffPalApi.Data.Debt", "Debt")
                        .WithMany("Payments")
                        .HasForeignKey("DebtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debt");
                });

            modelBuilder.Entity("PayOffPalApi.Data.Debt", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PayOffPalApi.Data.DebtCategory", b =>
                {
                    b.Navigation("Debts");
                });
#pragma warning restore 612, 618
        }
    }
}
